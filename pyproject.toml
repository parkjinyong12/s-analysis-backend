[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-analysis-backend"
version = "1.0.0"
description = "주식 분석 백엔드 API 서버"
authors = [
    {name = "Stock Analysis Team", email = "team@stockanalysis.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "Flask>=3.1.1",
    "flask-cors>=6.0.1",
    "Flask-SQLAlchemy>=3.1.1",
    "Flask-Executor>=1.0.0",
    "psycopg2-binary>=2.9.10",
    "pandas>=2.3.1",
    "numpy>=2.2.6",
    "requests>=2.32.4",
    "beautifulsoup4>=4.13.4",
    "python-dotenv>=1.1.1",
    "structlog>=24.4.0",
    "gunicorn>=22.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-flask>=1.3.0",
    "pytest-cov>=5.0.0",
    "black>=24.10.0",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "flask-restx>=1.3.1",
]

[project.urls]
Homepage = "https://github.com/stock-analysis/backend"
Repository = "https://github.com/stock-analysis/backend"
Documentation = "https://stock-analysis-backend.readthedocs.io"
"Bug Tracker" = "https://github.com/stock-analysis/backend/issues"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "flask_sqlalchemy.*",
    "flask_cors.*",
    "flask_executor.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 